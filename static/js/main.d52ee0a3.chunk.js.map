{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","React","memo","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","className","map","classNames","href","onClick","title","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2NAeaA,EAA0BC,IAAMC,MAC3C,YAIO,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAEvE,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BAEIP,EAAKQ,KAAI,SAACH,GACR,OACE,oBAEEE,UAAWE,IACT,CAAE,YAAaJ,EAAIC,KAAOH,EAAYG,KAExC,UAAQ,MALV,SAOE,mBACEI,KAAI,WAAML,EAAIC,IACd,UAAQ,UACRK,QAAS,WACHV,IAAkBI,EAAIC,IAI1BJ,EAAcG,IARlB,SAWGA,EAAIO,SAjBFP,EAAIC,WA0BrB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYU,gBCpDVb,EAAc,CACzB,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAS7BC,EAAgB,WAC3B,MAA0CC,mBAASf,EAAK,GAAGM,IAA3D,mBAAOL,EAAP,KAAsBe,EAAtB,KAEMb,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAMvE,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,kCACqBJ,EAAYS,SAGjC,cAACf,EAAD,CACEG,KAAMA,EACNC,cAAeA,EACfC,cAbgB,SAACG,GACrBW,EAAiBX,EAAIC,WCrBzBW,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d52ee0a3.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n\ninterface Props {\n  id: string,\n  title: string,\n  content: string,\n}\n\ninterface TabType {\n  tabs: Props[],\n  selectedTabId: string,\n  onTabSelected: (value: Props) => void,\n}\n\nexport const Tabs: React.FC<TabType> = React.memo(\n  ({\n    tabs,\n    selectedTabId,\n    onTabSelected,\n  }) => {\n    const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n    return (\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {\n              tabs.map((tab) => {\n                return (\n                  <li\n                    key={tab.id}\n                    className={classNames(\n                      { 'is-active': tab.id === selectedTab.id },\n                    )}\n                    data-cy=\"Tab\"\n                  >\n                    <a\n                      href={`#${tab.id}`}\n                      data-cy=\"TabLink\"\n                      onClick={() => {\n                        if (selectedTabId === tab.id) {\n                          return;\n                        }\n\n                        onTabSelected(tab);\n                      }}\n                    >\n                      {tab.title}\n                    </a>\n                  </li>\n                );\n              })\n            }\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n\n    );\n  },\n);\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ninterface Tab {\n  id: string,\n  title: string,\n  content: string,\n}\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selcted tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}